<?xml version="1.0"?>
<rss version="2.0">
<channel>
<language>zh-cn</language>
<copyright>cxy</copyright>
<generator>caixiangyue.github.io</generator>
<title>cxy</title>
<link>https://caixiangyue.github.io</link>
<description> cxy's blog </description>
<item>
<title>kafka学习</title>
<link>https://caixiangyue.github.io/kafka学习.html</link>
<description> <![CDATA[<h4>环境搭建</h4>
<p>启动<code>zookeeper</code></p>
<pre><code>$ bin/zookeeper-server-start.sh config/zookeeper.properties
</code></pre>
<p>启动<code>kafka</code></p>
<pre><code>$ bin/kafka-server-start.sh config/server.properties
</code></pre>
<p>创建topic</p>
<pre><code>$ bin/kafka-topics.sh --create --topic t1 --bootstrap-server localhost:12346 --partitions 1 --replication-factor 1

Created topic t1
</code></pre>
<p>生产消息</p>
<pre><code>$ bin/kafka-console-producer.sh --topic t1 --bootstrap-server localhost:12346
</code></pre>
<p>消费消息</p>
<pre><code>$ bin/kafka-console-consumer.sh --topic t1 --from-beginning --bootstrap-server localhost:12346
</code></pre><hr><p>Tue Dec  7 16:32:28 2021</p><script src="https://utteranc.es/client.js"
        repo="caixiangyue/caixiangyue.github.io"
        issue-term="pathname"
        theme="github-light"
        crossorigin="anonymous"
        async>
</script>
]]></description>
</item>
<item>
<title>似水年华</title>
<link>https://caixiangyue.github.io/似水年华.html</link>
<description> <![CDATA[<p>最近有个想法：把每一天发生的事记录下，一定会很有意思吧。<g-emoji class="g-emoji" alias="laughing" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png">😆</g-emoji></p>
<blockquote>
<p>愿你生命中有够多的云翳，来造成一个美丽的黄昏。    —— 冰心</p>
</blockquote>
<ul>
<li><a href="#user-content-20220207">2022-02-07</a></li>
<li><a href="#user-content-20220111">2022-01-11</a></li>
<li><a href="#user-content-20220110">2022-01-10</a></li>
<li><a href="#user-content-20220104">2022-01-04</a></li>
<li><a href="#user-content-20211222">2021-12-22</a></li>
<li><a href="#user-content-20210925">2021-09-25</a></li>
<li><a href="#user-content-20210830">2021-08-30</a></li>
<li><a href="#user-content-20210720">2021-07-20</a></li>
<li><a href="#user-content-20210208">2021-02-08</a></li>
<li><a href="#user-content-20210129">2021-01-29</a></li>
<li><a href="#user-content-20210119">2021-01-19</a></li>
<li><a href="#user-content-20201103">2020-11-03</a></li>
<li><a href="#user-content-20200916">2020-09-16</a></li>
<li><a href="#user-content-20200714">2020-07-14</a></li>
<li><a href="#user-content-20200701">2020-07-01</a></li>
<li><a href="#user-content-20200421">2020-04-21</a></li>
<li><a href="#user-content-20200414">2020-04-14</a></li>
<li><a href="#user-content-20200327">2020-03-27</a></li>
</ul>
<h4>2022-02-07</h4>
<span id="user-content-20220207">
</span>
<p>一年一度的春节结束了，我们一起做了10道菜，还算不错吧。</p>
<p>继续努力，争取不负韶华。</p>
<h4>2022-01-11</h4>
<span id="user-content-20220111">
</span>
<p>最近租的房子发霉了，是不是要有好运降临了呢？</p>
<p>希望过年能回家 <g-emoji class="g-emoji" alias="train" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f68b.png">🚋</g-emoji></p>
<h4>2022-01-10</h4>
<span id="user-content-20220110">
</span>
<p>周末为zn做了蒜苔炒肉。</p>
<p>zn戴上了王冠。</p>
<p>唱了祝你生日快乐，生日快乐，快乐，乐……</p>
<p>没有点蜡烛，但还是又长大了一岁。</p>
<blockquote>
<p>「 岁岁年年，万喜万般宜 」</p>
</blockquote>
<h4>2022-01-04</h4>
<span id="user-content-20220104">
</span>
昨天和朋友们聚餐，下午一起做了三个菜，香菇油菜，青椒炒肉，排骨土豆。
<p>吃得很快，一会儿就没了。</p>
<h4>2021-12-22</h4>
<span id="user-content-20211222">
</span>
<p>昨天是冬至，晚上和zn一起吃了两斤思念的<code>虾仁三鲜水饺</code>，真的是每个饺子都至少有一个大虾仁（吃了好几个都有三个虾仁）！</p>
<p>今天北京天气晴朗<g-emoji class="g-emoji" alias="sun_with_face" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f31e.png">🌞</g-emoji>，万里无云。</p>
<p>在这个美丽的上午，想一想今天要做的事情：</p>
<ol class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 看一下Redis深度历险</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 分析下erlang集群的任务</li>
</ol>
<h4>2021-12-16</h4>
<span id="user-content-20211216">
</span>
<p>公司团建去了环球影视城。<br>
<a target="_blank" rel="noopener noreferrer" href="../img/20211216/1.jpeg"><img src="../img/20211216/1.jpeg" alt="" style="max-width: 100%;"></a><br>
<a target="_blank" rel="noopener noreferrer" href="../img/20211216/2.jpeg"><img src="../img/20211216/2.jpeg" alt="" style="max-width: 100%;"></a><br>
哈利波特和变形金刚体验都非常不错，玩得很开心！</p>
<h4>2021-09-25</h4>
<span id="user-content-20210925">
</span>
<p>今天和zn尝试做了<code>炒蛏子</code>和<code>粉丝娃娃菜</code>，第一次做，味道还不错。</p>
<p>一起看了部电影叫<code>完美世界</code>。感觉说教是没用的，你的一言一行就是最重要的教育。</p>
<h4>2021-08-30</h4>
<span id="user-content-20210830">
</span>
<blockquote>
<p>业精于勤，荒于嬉；行成于思，毁于随。</p>
</blockquote>
<h4>2021-07-20</h4>
<span id="user-content-20210720">
</span>
<p>今日完成：</p>
<ol class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 实现了2个RPC函数，写了英文文档（用的Google翻译）</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 学习MySQL</li>
</ol>
<p>InnoDB的数据是存储在磁盘上的，会把经常访问的数据（索引页，数据页，undo页，插入缓冲，自适应hash索引，锁信息，数据字典信息）放到一块内存区域（缓冲池）访问，缓冲池使用LRU算法管理。</p>
<p>缓冲池默认页大小16KB</p>
<p>show engine innodb status;</p>
<h4>2021-02-08</h4>
<span id="user-content-20210208">
</span>
<p>最近看了本书叫作《窗边的小豆豆》，对我发人深省。<br>
记录下些许感悟：</p>
<ul>
<li>要蹲下来，多多倾听孩子的想法，感受他们的喜乐，为他们的高兴而高兴，为他们的悲伤而悲伤。</li>
<li>要做好孩子的榜样。</li>
<li>要让孩子幸福健康地成长。</li>
<li>不要把自己的喜好强加给孩子，孩子有自己的想法，应该让他们自己选择自己喜欢什么。</li>
<li>不要总是讲道理，要让他们从生活中感悟。</li>
<li>经常夸奖孩子，比如小林校长经常说的：你真是一个好孩子呀！</li>
</ul>
<h4>2021-01-29</h4>
<span id="user-content-20210129">
</span>
<p>昨天刮了大风，今天又放晴了。</p>
<p>人生各个阶段都有各自的幸福啊。</p>
<h4>2021-01-19</h4>
<span id="user-content-20210119">
</span>
北京下雪了，在黄色路灯的衬托下，显得格外好看。
<p>今天成功实现了早上6:30起床的梦想。改变不易，奖励下自己。</p>
<blockquote>
<p>「 为了做一名真正的绅士，即使明知必输无疑，也要有勇气接受挑战！」</p>
</blockquote>
<h4>2020-11-03</h4>
<span id="user-content-20201103">
</span>
<p>今天简单玩了玩 <code>github profile</code> 和 <code>github action</code>。感觉还是挺有意思的。<br>
尤其是 <code>github action</code> 有一个 <code>workflow</code> 的概念，并且基于他做了一个 <code>workflow</code> 市场的感觉，上传自己的 <code>workflow</code>，其他人可以使用自己需要的<code>workflow</code>，极大地提升了生产力，很棒！</p>
<h4>2020-09-16</h4>
<span id="user-content-20200916">
工作第三年了，三年时光稍纵即逝。
<p>感慨时光飞逝啊，感觉什么都不做，一会儿是春天，一会儿又是酷暑难耐，这几天迅速入秋，天气转凉，今年又到了尾巴。</p>
<p>想想曾经的自己也是意气风发，也有抱负，不甘堕落。这几年除了工作，每天就是玩玩玩，懒惰至极，总是找各种借口，新买的书一页都没看。</p>
<p>我心中有预感不能再这么下去了，人生短短数十载，荒废的光阴再也回不来了。而我回首过去，并没有因为偷懒而得到什么，得到的只是虚无。懒惰得到一时的满足，努力得到的是内心深处的满足，这种满足绵延而又长久。</p>
<p>再接下来的岁月，我也要成为一个自律，生活充满规律，不浪费生命，积极努力的人！立帖为证。<br>
</p>
<h4>2020-07-14</h4>
<span id="user-content-20200714">
为了成为更厉害的人而努力！<g-emoji class="g-emoji" alias="muscle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4aa.png">💪</g-emoji>
</span>
<h4>2020-07-01</h4>
<span id="user-content-20200701">
我发现只要每天定下很多任务，就什么都做不了。还不如每天只做一个任务，还轻松，闲适。
<p>一辈子做好一件事儿可真难啊！<br>
</p>
<h4>2020-04-21</h4>
<span id="user-content-20200421">
重新理解了什么是：“好读书，不求甚解”。
</span>
<h4>2020-04-14</h4>
<span id="user-content-20200414">
有的时候觉得自己很酷，可以做一些以前只有大人才能做成的事情。
</span>
<h4>2020-03-27</h4>
<span id="user-content-20200327">
不想记录一些流水账。
</span></span></span><hr><p>Mon Feb  7 10:57:33 2022</p><script src="https://utteranc.es/client.js"
        repo="caixiangyue/caixiangyue.github.io"
        issue-term="pathname"
        theme="github-light"
        crossorigin="anonymous"
        async>
</script>
]]></description>
</item>
<item>
<title>常用地址</title>
<link>https://caixiangyue.github.io/常用地址.html</link>
<description> <![CDATA[<h2>常用源</h2>
<ol>
<li><a href="https://pypi.tuna.tsinghua.edu.cn/simple" rel="nofollow">pip</a></li>
<li><a href="https://goproxy.cn" rel="nofollow">GOPROXY</a></li>
</ol>
<h2>翻墙</h2>
<ol>
<li><a href="https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt" rel="nofollow">SwichyOmega</a></li>
</ol>
<h2>软件</h2>
<ol>
<li><a href="https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh" rel="nofollow">ohmyzsh</a></li>
</ol>
<h2>博客</h2>
<ol>
<li><a href="https://draveness.me/" rel="nofollow">面向信仰编程</a></li>
<li><a href="https://coolshell.cn/" rel="nofollow">酷壳</a></li>
<li><a href="https://www.yinwang.org/" rel="nofollow">当然我在扯淡</a></li>
<li><a href="https://www.ixiqin.com/" rel="nofollow">西秦公子</a></li>
<li><a href="https://blog.codingnow.com/" rel="nofollow">云风</a></li>
<li><a href="http://blog.devtang.com/" rel="nofollow">唐巧的博客</a></li>
</ol><hr><p>Tue Dec 29 15:22:05 2020</p><script src="https://utteranc.es/client.js"
        repo="caixiangyue/caixiangyue.github.io"
        issue-term="pathname"
        theme="github-light"
        crossorigin="anonymous"
        async>
</script>
]]></description>
</item>
<item>
<title>erlang学习</title>
<link>https://caixiangyue.github.io/erlang学习.html</link>
<description> <![CDATA[<h4>hello world.</h4>
<p>创建一个源文件<code>hello.erl</code></p>
<div class="highlight highlight-source-erlang"><pre>-<span class="pl-k">module</span>(<span class="pl-en">hello</span>).
-<span class="pl-k">export</span>([<span class="pl-en">hello</span>/<span class="pl-c1">0</span>]).

<span class="pl-en">hello</span>()<span class="pl-k">-&gt;</span>
    <span class="pl-en">io</span>:<span class="pl-en">format</span>(<span class="pl-s"><span class="pl-pds">"</span>hello world.<span class="pl-c1">~n</span><span class="pl-pds">"</span></span>).</pre></div>
<p>编译运行</p>
<div class="highlight highlight-source-erlang"><pre><span class="pl-ii">$ </span><span class="pl-c1">erl</span>
<span class="pl-smi">Erlang</span><span class="pl-k">/</span><span class="pl-smi">OTP</span> <span class="pl-c1">24</span> [<span class="pl-c1">erts</span><span class="pl-k">-</span><span class="pl-c1">12.1</span>.<span class="pl-c1">5</span>] [<span class="pl-c1">source</span>] [<span class="pl-c1">64</span><span class="pl-k">-</span><span class="pl-c1">bit</span>] [<span class="pl-c1">smp</span>:<span class="pl-c1">8</span>:<span class="pl-c1">8</span>] [<span class="pl-c1">ds</span>:<span class="pl-c1">8</span>:<span class="pl-c1">8</span>:<span class="pl-c1">10</span>] [<span class="pl-c1">async</span><span class="pl-k">-</span><span class="pl-c1">threads</span>:<span class="pl-c1">1</span>] [<span class="pl-c1">jit</span>] [<span class="pl-c1">dtrace</span>]

<span class="pl-smi">Eshell</span> <span class="pl-smi">V12</span>.<span class="pl-c1">1.5</span>  (<span class="pl-c1">abort</span> <span class="pl-c1">with</span> ^<span class="pl-smi">G</span>)
<span class="pl-c1">1</span><span class="pl-k">&gt;</span> <span class="pl-en">c</span>(<span class="pl-c1">hello</span>).
{<span class="pl-c1">ok</span>,<span class="pl-c1">hello</span>}
<span class="pl-c1">2</span><span class="pl-k">&gt;</span> <span class="pl-en">hello</span>:<span class="pl-en">hello</span>().
<span class="pl-c1">hello</span> <span class="pl-c1">world</span>.
<span class="pl-c1">ok</span></pre></div>
<h4>元组</h4>
<div class="highlight highlight-source-erlang"><pre><span class="pl-c1">1</span><span class="pl-k">&gt;</span> <span class="pl-smi">Point</span> <span class="pl-k">=</span> {<span class="pl-c1">4</span>, <span class="pl-c1">5</span>}.
{<span class="pl-c1">4</span>,<span class="pl-c1">5</span>}
<span class="pl-c1">2</span><span class="pl-k">&gt;</span> {<span class="pl-smi">X</span>, <span class="pl-smi">Y</span>} <span class="pl-k">=</span> <span class="pl-smi">Point</span>.
{<span class="pl-c1">4</span>,<span class="pl-c1">5</span>}
<span class="pl-c1">3</span><span class="pl-k">&gt;</span> <span class="pl-smi">X</span>.
<span class="pl-c1">4</span>
<span class="pl-c1">4</span><span class="pl-k">&gt;</span> <span class="pl-smi">Y</span>.
<span class="pl-c1">5</span>
<span class="pl-c1">5</span><span class="pl-k">&gt;</span> {<span class="pl-c1">point</span>, <span class="pl-smi">Point</span>}.
{<span class="pl-c1">point</span>,{<span class="pl-c1">4</span>,<span class="pl-c1">5</span>}}</pre></div>
<h4>列表</h4>
<p>基本操作</p>
<div class="highlight highlight-source-erlang"><pre><span class="pl-k">&gt;</span> <span class="pl-smi">L</span> <span class="pl-k">=</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>].
[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>]
<span class="pl-c1">2</span><span class="pl-k">&gt;</span> [<span class="pl-smi">H</span>|<span class="pl-smi">T</span>] <span class="pl-k">=</span> <span class="pl-smi">L</span>.
[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>]
<span class="pl-c1">3</span><span class="pl-k">&gt;</span> <span class="pl-smi">H</span>.
<span class="pl-c1">1</span>
<span class="pl-c1">4</span><span class="pl-k">&gt;</span> <span class="pl-smi">T</span>.
[<span class="pl-c1">2</span>,<span class="pl-c1">3</span>]
<span class="pl-c1">5</span><span class="pl-k">&gt;</span> <span class="pl-smi">N</span> <span class="pl-k">=</span> [<span class="pl-c1">1</span>]<span class="pl-k">++</span><span class="pl-smi">T</span>.
[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>]
<span class="pl-c1">6</span><span class="pl-k">&gt;</span> <span class="pl-smi">N</span><span class="pl-k">--</span>[<span class="pl-c1">1</span>].
[<span class="pl-c1">2</span>,<span class="pl-c1">3</span>]</pre></div>
<p>列表推导</p>
<div class="highlight highlight-source-erlang"><pre><span class="pl-c1">10</span><span class="pl-k">&gt;</span> <span class="pl-smi">N</span>.
[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>]
<span class="pl-c1">11</span><span class="pl-k">&gt;</span> [ <span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-smi">X</span> || <span class="pl-smi">X</span> <span class="pl-k">&lt;-</span> <span class="pl-smi">N</span> ]. 
[<span class="pl-c1">2</span>,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>]

<span class="pl-c1">15</span><span class="pl-k">&gt;</span> <span class="pl-smi">W</span> <span class="pl-k">=</span> [<span class="pl-c1">1</span>, <span class="pl-c1">a</span>, <span class="pl-c1">b</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>].
[<span class="pl-c1">1</span>,<span class="pl-c1">a</span>,<span class="pl-c1">b</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>]
<span class="pl-c1">16</span><span class="pl-k">&gt;</span> [ <span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-smi">X</span> || <span class="pl-smi">X</span> <span class="pl-k">&lt;-</span> <span class="pl-smi">W</span>, <span class="pl-en">integer</span>(<span class="pl-smi">X</span>) ].
[<span class="pl-c1">2</span>,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>]</pre></div>
<h4>位语法</h4>
<div class="highlight highlight-source-erlang"><pre><span class="pl-c1">11</span><span class="pl-k">&gt;</span> <span class="pl-smi">Color</span> <span class="pl-k">=</span> <span class="pl-c1">16#FF00AA</span>.    
<span class="pl-c1">16711850</span>
<span class="pl-c1">12</span><span class="pl-k">&gt;</span> <span class="pl-smi">Pixel</span> <span class="pl-k">=</span> &lt;&lt;<span class="pl-smi">Color</span>:<span class="pl-c1">24</span>&gt;&gt;. 
&lt;&lt;<span class="pl-c1">255</span>,<span class="pl-c1">0</span>,<span class="pl-c1">170</span>&gt;&gt;
<span class="pl-c1">13</span><span class="pl-k">&gt;</span> &lt;&lt;<span class="pl-smi">R</span>:<span class="pl-c1">8</span>, <span class="pl-smi">Rest</span>/<span class="pl-k">binary</span>&gt;&gt; <span class="pl-k">=</span> <span class="pl-smi">Pixel</span>.
&lt;&lt;<span class="pl-c1">255</span>,<span class="pl-c1">0</span>,<span class="pl-c1">170</span>&gt;&gt;
<span class="pl-c1">14</span><span class="pl-k">&gt;</span> <span class="pl-smi">R</span>.
<span class="pl-c1">255</span></pre></div>
<h4>函数</h4>
<p>创建<code>same.erl</code></p>
<div class="highlight highlight-source-erlang"><pre>-<span class="pl-k">module</span>(<span class="pl-en">same</span>).
-<span class="pl-k">compile</span>(<span class="pl-c1">export_all</span>).

<span class="pl-en">same</span>(<span class="pl-smi">X</span>, <span class="pl-smi">X</span>)<span class="pl-k">-&gt;</span>
    <span class="pl-c1">true</span>;
<span class="pl-en">same</span>(<span class="pl-c1">_</span>,<span class="pl-c1">_</span>)<span class="pl-k">-&gt;</span>
    <span class="pl-c1">false</span>.</pre></div>
<p>运行</p>
<div class="highlight highlight-source-erlang"><pre><span class="pl-c1">1</span><span class="pl-k">&gt;</span> <span class="pl-en">c</span>(<span class="pl-c1">same</span>).
<span class="pl-c1">same</span>.<span class="pl-c1">erl</span>:<span class="pl-c1">2</span>:<span class="pl-c1">2</span>: <span class="pl-smi">Warning</span>: <span class="pl-c1">export_all</span> <span class="pl-c1">flag</span> <span class="pl-c1">enabled</span> <span class="pl-k">-</span> <span class="pl-c1">all</span> <span class="pl-c1">functions</span> <span class="pl-c1">will</span> <span class="pl-c1">be</span> <span class="pl-c1">exported</span>
<span class="pl-c"><span class="pl-c">%</span>    2| -compile(export_all).</span>
<span class="pl-c"><span class="pl-c">%</span>     |  ^</span>

{<span class="pl-c1">ok</span>,<span class="pl-c1">same</span>}
<span class="pl-c1">2</span><span class="pl-k">&gt;</span> <span class="pl-en">same</span>:<span class="pl-en">same</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>).
<span class="pl-c1">true</span>
<span class="pl-c1">3</span><span class="pl-k">&gt;</span> <span class="pl-en">same</span>:<span class="pl-en">same</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>).
<span class="pl-c1">false</span></pre></div><hr><p>Thu Dec  9 17:08:39 2021</p><script src="https://utteranc.es/client.js"
        repo="caixiangyue/caixiangyue.github.io"
        issue-term="pathname"
        theme="github-light"
        crossorigin="anonymous"
        async>
</script>
]]></description>
</item>
<item>
<title>tcp相关配置</title>
<link>https://caixiangyue.github.io/tcp相关配置.html</link>
<description> <![CDATA[<h4>linux 内核参数</h4>
<ul>
<li>tcp_max_syn_backlog: 用于设置半连接队列(syn queue，内核中实现为一个哈希表)大小</li>
<li>somaxconn: 用于设置全连接队列(accept queue)大小</li>
<li>syncookies: 开启此参数可以再不使用半连接队列的情况下成功建立连接</li>
</ul>
<h4>用户参数</h4>
<ul>
<li>backlog: 用于设置全连接队列大小</li>
</ul>
<p>tcp_max_syn_backlog， somaxconn， backlog这三个参数的最小值就是半连接队列的最大长度</p>
<p>somaxconn和backlog的最小值就是全连接队列的最大长度</p>
<h4>临时修改内核参数命令</h4>
<div class="highlight highlight-source-shell"><pre>sudo sysctl -w net.core.somaxconn=4096</pre></div><hr><p>Mon Dec  6 10:39:41 2021</p><script src="https://utteranc.es/client.js"
        repo="caixiangyue/caixiangyue.github.io"
        issue-term="pathname"
        theme="github-light"
        crossorigin="anonymous"
        async>
</script>
]]></description>
</item>
<item>
<title>用C扩展Python</title>
<link>https://caixiangyue.github.io/用C扩展Python.html</link>
<description> <![CDATA[<blockquote>
<p>用C语言写一个最简单的python扩展。</p>
</blockquote>
<h2>一. 上代码</h2>
<ol>
<li>hello.c</li>
</ol>
<div class="highlight highlight-source-c"><pre>#<span class="pl-k">include</span><span class="pl-s"><span class="pl-pds">&lt;</span>Python.h<span class="pl-pds">&gt;</span></span>

<span class="pl-k">static</span> PyObject *<span class="pl-en">say_hello</span>(PyObject *self, PyObject *args) {
    <span class="pl-k">return</span> <span class="pl-c1">Py_BuildValue</span>(<span class="pl-s"><span class="pl-pds">"</span>s<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>hello from c.<span class="pl-pds">"</span></span>);
}

<span class="pl-k">static</span> PyMethodDef methods[] = {
    {<span class="pl-s"><span class="pl-pds">"</span>say_hello<span class="pl-pds">"</span></span>, say_hello, METH_VARARGS, <span class="pl-s"><span class="pl-pds">"</span>say hello.<span class="pl-pds">"</span></span>},
    {<span class="pl-c1">NULL</span>, <span class="pl-c1">NULL</span>, <span class="pl-c1">0</span>, <span class="pl-c1">NULL</span>}
};

<span class="pl-k">static</span> <span class="pl-k">struct</span> PyModuleDef module_def =
{
    PyModuleDef_HEAD_INIT,
    <span class="pl-s"><span class="pl-pds">"</span>hello<span class="pl-pds">"</span></span>,
    <span class="pl-s"><span class="pl-pds">"</span>say hello<span class="pl-pds">"</span></span>,
    -<span class="pl-c1">1</span>,
    methods
};

PyMODINIT_FUNC <span class="pl-en">PyInit_hello</span>(<span class="pl-k">void</span>) {
    <span class="pl-k">return</span> <span class="pl-c1">PyModule_Create</span>(&amp;module_def);
}</pre></div>
<ol start="2">
<li>setup.py</li>
</ol>
<div class="highlight highlight-source-python"><pre><span class="pl-k">from</span> <span class="pl-s1">distutils</span>.<span class="pl-s1">core</span> <span class="pl-k">import</span> <span class="pl-s1">setup</span>, <span class="pl-v">Extension</span>

<span class="pl-s1">module</span> <span class="pl-c1">=</span> <span class="pl-v">Extension</span>(<span class="pl-s">'hello'</span>, <span class="pl-s1">sources</span> <span class="pl-c1">=</span> [<span class="pl-s">'hello.c'</span>])

<span class="pl-en">setup</span>(<span class="pl-s1">name</span> <span class="pl-c1">=</span> <span class="pl-s">'say hello'</span>, <span class="pl-s1">version</span> <span class="pl-c1">=</span> <span class="pl-s">'0.0.1'</span>, <span class="pl-s1">ext_modules</span> <span class="pl-c1">=</span> [<span class="pl-s1">module</span>])</pre></div>
<h2>二. 编译</h2>
<div class="highlight highlight-source-shell"><pre>$ python setup.py build</pre></div>
<h2>三. 调用</h2>
<p><strong>注</strong> 此时想要调用需要把<code>hello.so</code>共享库加到PYTHONPATH环境变量中。</p>
<div class="highlight highlight-source-python"><pre><span class="pl-c">#!/usr/bin/env python3</span>
<span class="pl-k">import</span> <span class="pl-s1">hello</span>
<span class="pl-en">print</span>(<span class="pl-s1">hello</span>.<span class="pl-en">say_hello</span>()) </pre></div>
<h2>四. 参考</h2>
<ul>
<li><a href="https://docs.python.org/3/extending/extending.html" rel="nofollow">https://docs.python.org/3/extending/extending.html</a></li>
</ul><hr><p>Mon Feb 24 17:36:07 2020</p><script src="https://utteranc.es/client.js"
        repo="caixiangyue/caixiangyue.github.io"
        issue-term="pathname"
        theme="github-light"
        crossorigin="anonymous"
        async>
</script>
]]></description>
</item>
<item>
<title>任务管理</title>
<link>https://caixiangyue.github.io/任务管理.html</link>
<description> <![CDATA[<h3>2022-06-09</h3>
<ol class="contains-task-list">
<li>(1, 3)限流测试通过</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 会话列表功能测试通过</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> 会话列表客户是否分页</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 1114210610083238#zanyou1 每日调用次数大概2W~3W次左右，会话列表数量较大的用户：pps88888888，其余基本都是1KB以下的</li>
</ol>
<h3>2022-05-17</h3>
<h4>discord相关</h4>
<ol>
<li>创建的群带有<code class="notranslate">channel</code>标识，屏蔽原本的所有事件，由<code class="notranslate">discord-server</code>传递新事件</li>
<li>拉取会话列表，去掉<code class="notranslate">channel</code></li>
</ol>
<h3>2022-03-30</h3>
<ol>
<li>协助排查redis内存上升很快的问题</li>
<li>协助排查mongo离线消息拉不到的问题</li>
<li>编写脚本实现每个月清理redis中的stream，mqtt redis的内存使用量从900MB降到了400MB</li>
</ol>
<h3>2022-03-23</h3>
<ol class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 学习spring boot</li>
</ol>
<h3>2022-02-17</h3>
<ol>
<li>调研规则引擎</li>
</ol>
<h3>2022-02-11</h3>
<ol class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 排查retain问题</li>
</ol>
<h3>2022-02-10</h3>
<ol class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 协助测试</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 协助排查mqtt-paho-cpp客户端无法通过wss连接的问题</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> rust学习</li>
</ol>
<h3>2022-02-08</h3>
<ol class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> rust学习</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> threeq相关任务</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 熟悉上线流程</li>
</ol><hr><p>Fri Jun 10 15:39:10 2022</p><script src="https://utteranc.es/client.js"
        repo="caixiangyue/caixiangyue.github.io"
        issue-term="pathname"
        theme="github-light"
        crossorigin="anonymous"
        async>
</script>
]]></description>
</item>
<item>
<title>朝花夕拾</title>
<link>https://caixiangyue.github.io/朝花夕拾.html</link>
<description> <![CDATA[<h2>一. c宏</h2>
<ol>
<li>
<p><code>do{}while(0)</code> 宏的用处?</p>
<p>避免调用者出现使用错误，保证程序执行的一致性。<br>
例如：</p>
<div class="highlight highlight-source-c"><pre>#<span class="pl-k">define</span> <span class="pl-en">FOO</span>() foo1();foo2();</pre></div>
<p>调用代码：</p>
<div class="highlight highlight-source-c"><pre><span class="pl-k">if</span> (a &gt; <span class="pl-c1">0</span>)
    <span class="pl-en">FOO</span>();</pre></div>
<p>会被扩展成:</p>
<div class="highlight highlight-source-c"><pre><span class="pl-k">if</span> (a &gt; <span class="pl-c1">0</span>)
    <span class="pl-en">foo1</span>();foo2();</pre></div>
<p>这时就产生了一个问题，若是<code>a &lt;= 0</code>，<code>foo2()</code>仍然会被调用。<br>
正确的写法：</p>
<div class="highlight highlight-source-c"><pre>#<span class="pl-k">define</span> <span class="pl-en">FOO</span>() \
        <span class="pl-k">do</span>{ \
            <span class="pl-c1">foo1</span>(); \
            <span class="pl-c1">foo2</span>(); \
        }<span class="pl-k">while</span>(<span class="pl-c1">0</span>)</pre></div>
</li>
</ol>
<h2>二. 计算机二三事</h2>
<ol>
<li>
<p>栈和堆的区别</p>
<ul>
<li>栈的结构是先进后出，永远操作的是栈顶</li>
<li>栈中的数据必须已知且大小固定（如c语言的数组）</li>
<li>堆是缺乏组织的，当向堆中放入数据，操作系统会去寻找到一块足够大的空间，标记为已使用，并返回一个指向这块空间的指针</li>
</ul>
<p>操作栈空间是比堆速度快的，因为使用堆你需要先寻找到一块足够大的空间（<code>malloc</code>），而且使用的内存并不是连续的（如动态链表），需要在内存中跳来跳去，这些操作都会降低性能。<br>
还有很多原因，如cpu对栈有直接支持（<code>push</code>, <code>pop</code>）；栈内存由操作系统管理，而堆内存由用户程序管理。</p>
</li>
<li>
<p>指针</p>
<blockquote>
<p>In computer science, a pointer is a programming language object that stores a memory address. --wikipedia</p>
</blockquote>
<p>在计算机科学中，指针就是存储了一个内存地址的编程语言对象。</p>
</li>
<li>
<p>引用</p>
<p>以 java 为例:</p>
<blockquote>
<p>A reference is an address that indicates where an object's variables and methods are stored.</p>
</blockquote>
<p>引用是一个指向了对象的方法和变量存储位置的地址。</p>
</li>
</ol>
<h2>三. linux命令</h2>
<ol>
<li>
<p>删除当前目录除某文件外的所有文件</p>
<div class="highlight highlight-source-shell"><pre>ls <span class="pl-k">|</span> grep -v except_filename <span class="pl-k">|</span> xargs rm -rf</pre></div>
</li>
<li>
<p>更新所有的module</p>
<pre><code>git submodule update --init --recursive --remote
</code></pre>
</li>
</ol>
<h2>四. Redis需要注意的问题</h2>
<ol>
<li>集群环境下使用lua脚本只支持一个key，多个key需要用{}括起来</li>
</ol><hr><p>Thu Feb 17 10:27:30 2022</p><script src="https://utteranc.es/client.js"
        repo="caixiangyue/caixiangyue.github.io"
        issue-term="pathname"
        theme="github-light"
        crossorigin="anonymous"
        async>
</script>
]]></description>
</item>
<item>
<title>hello world</title>
<link>https://caixiangyue.github.io/hello-world.html</link>
<description> <![CDATA[<h1>Hello World</h1>
<h2>1.test</h2>
<blockquote>
<p>test</p>
</blockquote><hr><p>Mon Feb 24 17:36:07 2020</p><script src="https://utteranc.es/client.js"
        repo="caixiangyue/caixiangyue.github.io"
        issue-term="pathname"
        theme="github-light"
        crossorigin="anonymous"
        async>
</script>
]]></description>
</item>
</channel>
</rss>